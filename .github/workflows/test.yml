name: Build and test

on:
  pull_request:
  push:
    branches:
      - main
      - staging
      - trying
  schedule:
    - cron: '0 0 * * 6'

jobs:
  build:
    name: Test
    runs-on: ${{ matrix.os }}
    # these tests based on the nightly compiler, which can be broken
    # consequently, we continue on an error
    #continue-on-error: true

    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [nightly]
        include:
          - os: ubuntu-latest
            rust: 'stable'
            targets: 'x86_64-unknown-linux-gnu'

    steps:
    - uses: hecrj/setup-rust-action@v1
      with: 
         rust-version: ${{ matrix.rust }}
         components: ${{ matrix.components || '' }}
         targets: ${{ matrix.targets || '' }}
    - uses: actions/checkout@v2
      with:
         lfs: true
    - name: Check Cargo availability
      run: cargo --version
    - name: Building dev version
      run:
         cargo build
    - name: Building release version
      run:
         cargo build --release
    - name:
      run: |
         mkdir rootfs
         cargo run -- pull -b rootfs/ -u "$REGISTRY_USER" -p "$REGISTRY_TOKEN"  registry.git.rwth-aachen.de/acs/public/hermitcore/rusty-hermit/demo
      env:
         REGISTRY_USER: ${{ secrets.Registry_User }}
         REGISTRY_TOKEN: ${{ secrets.Registry_Token }}
